{"version":3,"file":"static/js/897.dd2fd32f.chunk.js","mappings":"4JAoDA,UAhDiB,WACb,IAAMA,GAAUC,EAAAA,EAAAA,MAChB,GAA+CC,EAAAA,EAAAA,KAAvCC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAaC,EAAW,EAAXA,YAC/B,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAa5B,OAXAC,EAAAA,EAAAA,YAAU,WACNP,EAAYJ,EAAQY,OACxB,GAAG,KAUC,iCACI,iBAAKC,UAAU,YAAW,WACtB,4CACA,kBAAMC,SAAU,SAACC,GAAC,OAX9B,SAAgBA,GACZA,EAAEC,iBACFX,EAAYL,EAAQY,OAASL,EAAQE,GACrCD,EAAU,IACVE,EAAY,GAChB,CAMmCO,CAAOF,EAAE,EAAEF,UAAU,YAAW,WACnD,kBAAOK,QAAQ,WAAU,oBACzB,kBAAOC,KAAK,OAAOC,GAAG,WAAWC,KAAK,WAAWC,UAAQ,EAACC,YAAY,MAAMC,aAAa,MAAMC,MAAOlB,EAAQmB,SAAU,SAACX,GAAC,OAAKP,EAAUO,EAAEY,OAAOF,MAAM,KACxJ,kBAAOP,QAAQ,UAAS,uBACxB,kBAAOC,KAAK,OAAOC,GAAG,UAAUC,KAAK,UAAUC,UAAQ,EAACC,YAAY,YAAYC,aAAa,MAAMC,MAAOhB,EAAUiB,SAAU,SAACX,GAAC,OAAKL,EAAYK,EAAEY,OAAOF,MAAM,KAChK,mBAAQZ,UAAU,WAAU,yBAGpC,gBAAKA,UAAU,cAAa,SACvBV,EAASyB,OAAS,EAAIzB,EAAS0B,KAAI,SAACC,GACjC,OACI,gBAAoBjB,UAAU,iBAAgB,UAC1C,4BACI,iBAAKA,UAAU,YAAW,WACtB,cAAGA,UAAU,YAAW,SAAEiB,EAAKC,YAC/B,cAAGlB,UAAU,YAAW,SAAEiB,EAAKE,aAEnC,cAAGnB,UAAU,WAAU,SAAEiB,EAAKG,cAN5BH,EAAKI,IAUvB,KAAK,iDAIrB,C","sources":["Components/Comments/Comments.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport useLink from '../../Hook/useLink'\nimport { useParams } from 'react-router-dom'\n\nconst Comments = () => {\n    const curPost = useParams()\n    const { comments, getComments, newComments } = useLink()\n    const [poster, setPoster] = useState('')\n    const [postBody, setPostBody] = useState('')\n\n    useEffect(() => {\n        getComments(curPost.postid!)\n    }, [])\n\n    function submit(e: React.FormEvent) {\n        e.preventDefault()\n        newComments(curPost.postid!, poster, postBody)\n        setPoster('')\n        setPostBody('')\n    }\n\n    return (\n        <>\n            <div className='comm-post'>\n                <p>Post a Comment!</p>\n                <form onSubmit={(e) => submit(e)} className='comm-form'>\n                    <label htmlFor=\"postedBy\">Name:</label>\n                    <input type='text' id='postedBy' name='postedBy' required placeholder='bob' autoComplete='off' value={poster} onChange={(e) => setPoster(e.target.value)} />\n                    <label htmlFor=\"msgBody\">Comment:</label>\n                    <input type='text' id='msgBody' name='msgBody' required placeholder='nice post' autoComplete='off' value={postBody} onChange={(e) => setPostBody(e.target.value)} />\n                    <button className='comm-btn'>Post</button>\n                </form>\n            </div>\n            <div className='comm-holder'>\n                {comments.length > 0 ? comments.map((comm) => {\n                    return (\n                        <div key={comm._id} className='comm-container' >\n                            <div>\n                                <div className='comm-info'>\n                                    <p className='comm-user'>{comm.postedBy}</p>\n                                    <p className='comm-date'>{comm.posted}</p>\n                                </div>\n                                <p className='comm-msg'>{comm.msgBody}</p>\n                            </div>\n                        </div>\n                    )\n                }) : <p>No Comments Found</p>}\n            </div>\n        </>\n    )\n}\n\nexport default Comments"],"names":["curPost","useParams","useLink","comments","getComments","newComments","useState","poster","setPoster","postBody","setPostBody","useEffect","postid","className","onSubmit","e","preventDefault","submit","htmlFor","type","id","name","required","placeholder","autoComplete","value","onChange","target","length","map","comm","postedBy","posted","msgBody","_id"],"sourceRoot":""}